$animation-time: 0.5s;
$label-animate-time: 0.2s;

.select {
  position: relative;
  @extend %inline-flex;

  @include mobile {
    width: 100%;
  }

  > label {
    position: relative;
    min-width: fit-content;
    width: 100%;
    border: 0;
    padding: 0.5rem 0.5rem 0.5rem 1rem;
    cursor: pointer;
    border-radius: 30px;
    @include font(0.875rem, semi-bold);

    @include mobile() {
      @include font(1rem, semi-bold);
    }

    &:hover {
      box-shadow: 0 2.5px 8px color(_others, 'shadow');

      @include mobile() {
        box-shadow: none;
      }
    }

    + i {
      position: absolute;
      right: 0.5rem;
      top: 0.5rem;
      font-size: 1.5rem;
    }
  }

  &_list {
    position: absolute;
    list-style: none;
    width: 100%;
    margin: 0;
    padding: 0;
    z-index: 998;

    &.bottom {
      top: 2.5rem;
    }

    &.top {
      bottom: 2.5rem;
    }

    @include mobile() {
      position: fixed;
      display: flex;
      flex-direction: column;
      justify-content: center;
      width: calc(100% - 4rem);
      padding: 2rem;
      top: 0;
      left: 0;

      &::before {
        content: attr(data-title);
        display: block;
        font-size: 1.5rem;
        margin: 1rem;
        color: color(_others, 'light');
      }
    }

    > li {
      [type='radio'] {
        display: none;

        + label {
          display: block;
          margin: 5px 0;
          padding: 0.5rem 1rem;
          border-radius: 30px;
          text-decoration: none;
          cursor: pointer;
          @include font(1rem, regular);
        }
      }
    }
  }

  [type='checkbox'] {
    display: none;

    ~ .select_list {
      height: 0;
      overflow: hidden;

      @include mobile() {
        display: none;
      }
    }

    &:checked {
      ~ .select_list {
        height: min-content;
        overflow: hidden;

        @include mobile() {
          display: flex;
          width: 100%;
          height: 100%;
          top: 0;
        }
      }
    }
  }

  &.header,
  &.pagination {
    @include mobile {
      > label {
        width: 100%;
        margin: 0 auto;
      }

      .select_list {
        top: inherit;
        bottom: 35px;

        &.buttom {
          top: 2.5rem;
        }

        &.top {
          bottom: 2.5rem;
        }

        li {
          margin-bottom: 10px;
        }
      }
    }
  }

  &.header {
    > label {
      min-width: 180px;
      max-height: 38px;
    }
  }

  &.pagination {
    > label {
      min-width: 85px;
      max-height: 38px;
    }
  }
}

// Combo
.field {
  position: relative;
  z-index: 0;

  label {
    position: absolute;
    font-size: 1.4rem;
    top: 0;
    left: 0;
  }

  .infos {
    display: flex;
    font-size: 0.8rem;
    color: color(_gray, light);

    &__message {
      width: 90%;
    }

    &__count {
      float: right;
      width: 10%;
      text-align: right;
    }
  }

  &.combo {
    position: relative;
    z-index: map-get($z-index, combo);
    margin: 0 0 12px 0;

    i {
      position: absolute;
      top: 1rem;
      right: 0.5rem;
      z-index: 0;
    }

    [type='checkbox'] {
      display: none;

      + label {
        display: flex;
        position: relative;
        width: 100%;
        height: 3.5rem;
        padding: 1rem;
        justify-content: space-between;
        align-content: center;
        font-size: 1rem;
        font-weight: 500;
        line-height: 1.4;
        color: color(_gray, medium);
        border: 1px solid color(_gray, medium);
        border-radius: 0.5rem;
        cursor: pointer;
        z-index: 2;

        &::before {
          content: attr(data-label);
          position: absolute;
          font-size: 0.8rem;
          top: -0.5rem;
          line-height: 1;
          padding: 0 0.2rem;
          background-color: color(_others, light);
        }

        &:focus {
          border: 1px solid color(_aquamarine, medium);
        }
      }

      &.required {
        + label {
          &::before {
            content: attr(data-label) ' *';
          }
        }
      }

      &[disabled] {
        + label {
          color: color(_gray, extra-light);
          border: 1px solid color(_gray, extra-light);

          + i {
            color: color(_gray, extra-light);
          }
        }
      }

      &.invalid {
        border: 1px solid color(_red, medium);

        + label {
          color: color(_red, medium);
          border: 1px solid color(_red, medium);
        }

        ~ .infos,
        ~ i {
          color: color(_red, medium);
        }
      }

      &.valid {
        border: 1px solid color(_aquamarine, medium);

        + label,
        ~ .infos {
          color: color(_aquamarine, medium);
        }
      }

      ~ .combo-list {
        display: none;
      }

      &:checked {
        ~ .combo-list {
          display: block;
          position: absolute;
          width: 100%;
          padding: 0.5rem 0 0;
          margin: -0.5rem 0 0;
          top: 3.5rem;
          list-style: none;
          border-left: 1px solid color(_gray, light);
          border-right: 1px solid color(_gray, light);
          border-bottom: 1px solid color(_gray, light);
          border-radius: 0 0 0.5rem 0.5rem;
          background-color: color(_others, light);
          box-shadow: 2px 2px 4px rgba(color(_others, shadow), 0.8);
          z-index: map-get($z-index, combo);

          li {
            display: block;
            min-height: 3rem;
            border-bottom: 1px solid color(_gray, light);

            &:hover {
              background-color: rgba(color(_gray, extra-light), 0.2);
            }

            &:first-child {
              border-radius: 0.5rem 0.5rem 0 0;
            }

            &:last-child {
              border-radius: 0 0 0.5rem 0.5rem;
              border-bottom: 0;
            }

            [type='radio'] {
              display: none;

              + label {
                position: relative;
                display: block;
                width: calc(100% - 2rem);
                font-size: 1rem;
                padding: 1rem;
                color: color(_gray, medium);
                cursor: pointer;

                &:hover {
                  color: color(_aquamarine, medium);
                }
              }

              &:checked {
                + label {
                  color: color(_aquamarine, medium);
                }
              }

              &[value='-1'] {
                + label {
                  color: color(_gray, light);
                }
              }
            }
          }
        }
      }
    }
  }
}
